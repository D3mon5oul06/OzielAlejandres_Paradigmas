clear, clc

x0 = [1	1	1	1	1	1	1	1 -1	1	-1	1	-1	1	-1	-1 -1	1	-1	1	-1	1	-1	-1 -1	1	-1	1	-1	1	-1	-1 -1	1	-1	1	-1	1	-1	-1 -1	1	-1	1	-1	1	-1	-1 -1	1	-1	1	-1	1	-1	-1 -1	1	-1	1	-1	1	-1	-1 -1	1	-1	1	-1	1	-1	-1 1	1	1	1	1	1	1	1 ];
  
x1 = [1	-1	-1	-1	-1	-1	-1	1 1	-1	-1	-1	-1	-1	-1	1 1	1	-1	-1	-1	-1	1	1 1	1	-1	-1	-1	-1	1	1 -1	1	1	-1	-1	1	1	-1 -1	1	1	-1	-1	1	1	-1 -1	-1	1	1	1	1	-1	-1 -1	-1	1	1	1	1	-1	-1 -1	-1	-1	1	1	-1	-1	-1 -1	-1	-1	1	1	-1	-1	-1 ];

x2 = [1	1	-1	-1	-1	-1	-1	-1 1	1	-1	-1	-1	-1	-1	-1 1	1	-1	-1	-1	-1	-1	-1 1	1	-1	-1	-1	-1	-1	-1 1	1	-1	-1	-1	-1	-1	-1 1	1	-1	-1	-1	-1	-1	-1 1	1	-1	-1	-1	-1	-1	-1 1	1	1	1	1	1	1	1 1	1	1	1	1	1	1	1 1	1	1	1	1	1	1	1 ];

x3 = [1	-1	1	-1	1	1	1	1 1	-1	1	-1	-1	1	1	-1 1	-1	1	-1	-1	1	1	-1 -1	1	-1	-1	-1	1	1	-1 -1	1	-1	-1	-1	1	1	-1 -1	1	-1	-1	-1	1	1	-1 1	-1	1	-1	-1	1	1	-1 1	-1	1	-1	-1	1	1	-1 1	-1	1	-1	-1	1	1	-1 1	-1	1	-1	1	1	1	1  ];

x4 = [1	-1	1	1	-1	1	1	-1 1	-1	1	-1	-1	1	-1	1 1	-1	1	-1	-1	1	-1	1 1	-1	1	-1	-1	1	-1	1 1	-1	1	-1	-1	1	-1	1 1	-1	1	-1	-1	1	-1	1 1	-1	1	-1	-1	1	-1	1 1	-1	1	-1	-1	1	-1	1 1	-1	1	-1	-1	1	-1	1 1	-1	1	1	-1	1	1	-1 ];

x5 = [1	1	1	-1	1	-1	-1	1 1	1	1	-1	1	-1	-1	1 1	-1	-1	-1	1	-1	-1	1 1	-1	-1	-1	-1	1	1	-1 1	-1	-1	-1	-1	1	1	-1 1	-1	-1	-1	-1	1	1	-1 1	-1	-1	-1	-1	1	1	-1 1	-1	-1	-1	1	-1	-1	1 1	1	1	-1	1	-1	-1	1 1	1	1	-1	1	-1	-1	1 ];

x6 = [1	1	-1	1	1	-1	1	1 1	1	-1	1	1	-1	1	-1 1	1	-1	1	1	-1	1	-1 1	-1	1	-1	1	-1	1	-1 1	-1	1	-1	1	-1	1	-1 1	-1	1	-1	1	-1	1	-1 1	-1	-1	-1	1	-1	1	-1 1	-1	-1	-1	1	-1	1	-1 1	-1	-1	-1	1	-1	1	-1 1	-1	-1	-1	1	-1	1	1 ];

x7 = [1	-1	-1	-1	-1	-1	-1	1 -1	1	-1	-1	-1	-1	1	-1 -1	-1	1	-1	-1	1	-1	-1 -1	-1	-1	1	1	-1	-1	-1 -1	-1	-1	1	1	-1	-1	-1 -1	-1	-1	1	1	-1	-1	-1 -1	-1	-1	1	1	-1	-1	-1 -1	-1	1	-1	-1	1	-1	-1 -1	1	-1	-1	-1	-1	1	-1 1	-1	-1	-1	-1	-1	-1	1 ];

x8 = [1	1	-1	-1	1	-1	-1	-1 1	1	1	-1	1	-1	-1	-1 1	-1	1	-1	1	-1	-1	-1 1	-1	1	-1	1	-1	-1	-1 1	-1	1	-1	1	-1	-1	-1 1	-1	1	-1	1	-1	-1	-1 1	-1	1	-1	1	-1	-1	-1 1	-1	1	-1	1	-1	-1	-1 1	1	1	-1	1	-1	-1	-1 1	1	-1	-1	1	1	1	1 ];

x9 = [1	,1	,1	,1	,1	,1	,1	,1,1	,1	,1	,1	,1	,1	,1	,1,1	,-1	,-1	,1	,1	,-1	,-1	,1,-1	,-1	,1	,1	,1	,1	,-1	,-1,-1	,-1	,1	,1	,1	,1	,-1	,-1,-1	,-1	,1	,1	,1	,1	,-1	,-1,-1	,-1	,1	,1	,1	,1	,-1	,-1,1	,-1	,-1	,1	,1	,-1	,-1	,1,1	,1	,1	,1	,1	,1	,1	,1,1	,1	,1	,1	,1	,1	,1	,1];

x0mul = x0(:) * x0(:)';
%x0mul

x1mul = x1(:) * x1(:)';
%x1mul

x2mul = x2(:) * x2(:)';

x3mul = x3(:) * x3(:)';

x4mul = x4(:) * x4(:)';

x5mul = x5(:) * x5(:)';

x6mul = x6(:) * x6(:)';

x7mul = x7(:) * x7(:)';

x8mul = x8(:) * x8(:)';

x9mul = x9(:) * x9(:)';

w1 = x0mul + x1mul + x2mul + x3mul + x4mul + x5mul + x6mul + x7mul;
%w1

w = w1 - diag(diag(w1));
% w

%input ( valor a encontrar )
% encontrar x1

x = x6;
% mul  sum(w * x)

u0 = x;
c=1;

ulast = x;

while (1)
  
  u0 = u0 * w;
  u0
   
    % aplicar funcion de activacion thresold
 
   for i=1:1:80
      if u0(i) > 0
        u0(i) = 1;
      else
        u0(i) = -1;
     endif
   endfor

  %c
  %u0
  %ulast
    
    c = c + 1;
    ulast = u0;
    if (u0==ulast)
    
        fprintf('Resultado encontrado: \n\n');
          
          for i=1:80
            if (u0(i)) >0
              fprintf(' %d ', u0(i))
            else
              fprintf ('   ')
            endif
            
            if (mod(i,8)) == 0
              fprintf('\n')
            endif
          endfor
          fprintf('\n')
          
          fprintf('Resultado ingresado: \n\n');
          
          for i=1:80
            if (x(i))>0
              fprintf(' %d ', x(i))
            else
              fprintf ('   ')
            endif
            
            if (mod(i,8)) == 0
              fprintf('\n')
            endif
          endfor
          fprintf('\n')

        
      fprintf ('\n Matrices recorridas hasta hallar el resultado: %d \n', c);
     break;  
  else
     fprintf('No hay coincidencia\n')
  endif
   
end